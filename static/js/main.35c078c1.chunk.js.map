{"version":3,"sources":["Planets.js","App.js","index.js"],"names":["Planets","props","context","toggle","tab","state","activeTab","setState","planets","planetId","this","map","planet","id","isFavourite","name","className","style","padding","Nav","tabs","NavItem","NavLink","classnames","active","onClick","cursor","TabContent","TabPane","tabId","Row","Col","sm","ListGroup","listItem","buttonNode","ListGroupItem","key","Button","size","toggleFav","filter","length","nextProps","prevState","React","Component","App","fetch","then","res","json","data","catch","err","console","log","ReactDOM","render","document","querySelector"],"mappings":"iTAyHeA,E,kDApHX,WAAYC,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IASjBC,OAAS,SAAAC,GACD,EAAKC,MAAMC,YAAcF,GAAK,EAAKG,SAAS,CAAED,UAAWF,KAT7D,EAAKC,MAAQ,CACTG,QAAS,GACTF,UAAW,KAJS,E,sDAyBlBG,GACNC,KAAKH,SAAS,CACVC,QAASE,KAAKL,MAAMG,QAAQG,KAAI,SAAAC,GAC5B,OAAIA,EAAOC,KAAOJ,EACP,CACHI,GAAID,EAAOC,GACXC,aAAcF,EAAOE,YACrBC,KAAMH,EAAOG,MAIVH,S,+BAMb,IAAD,OACL,OACI,yBAAKI,UAAU,YAAYC,MAAO,CAAEC,QAAS,cACzC,kBAACC,EAAA,EAAD,CAAKC,MAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIN,UAAWO,IAAW,CAAEC,OAAiC,MAAzBd,KAAKL,MAAMC,YAC3CmB,QAAS,WAAQ,EAAKtB,OAAO,MAC7Bc,MAAO,CAAES,OAAQ,YAHrB,YAQJ,kBAACL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIN,UAAWO,IAAW,CAAEC,OAAiC,MAAzBd,KAAKL,MAAMC,YAC3CmB,QAAS,WAAQ,EAAKtB,OAAO,MAC7Bc,MAAO,CAAES,OAAQ,YAHrB,gBASR,kBAACC,EAAA,EAAD,CAAYrB,UAAWI,KAAKL,MAAMC,WAC9B,kBAACsB,EAAA,EAAD,CAASC,MAAM,KACX,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,MAEJ,kBAACC,EAAA,EAAD,KAEQvB,KAAKL,MAAMG,QAAQG,KAAI,SAACC,GACpB,IAAIsB,EAAWtB,EAAOG,KAClBoB,EAAa,oBAGjB,OAFIvB,EAAOE,cACPqB,EAAa,0BACT,kBAACC,EAAA,EAAD,CAAepB,UAAU,0BAA0BqB,IAAKzB,EAAOC,IAClEqB,EADG,IACQtB,EAAOE,YACnB,kBAACwB,EAAA,EAAD,CAAQC,KAAK,KAAKd,QAAS,kBAAM,EAAKe,UAAU5B,EAAOC,MAAMsB,WAQzF,kBAACP,EAAA,EAAD,CAASC,MAAM,KACX,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACHtB,KAAKL,MAAMG,QAAQiC,QAAO,SAAA7B,GAAM,OAAIA,EAAOE,eAAa4B,OAAS,GAC9D,kBAACT,EAAA,EAAD,KACKvB,KAAKL,MAAMG,QAAQG,KAAI,SAACC,GACrB,OAAIA,EAAOE,YACA,kBAACsB,EAAA,EAAD,CAAeC,IAAKzB,EAAOC,IAAKD,EAAOG,MAC3C,SAKlBL,KAAKL,MAAMG,QAAQiC,QAAO,SAAA7B,GAAM,OAAIA,EAAOE,eAAa4B,OAAS,GAClE,4D,gDAtFIC,EAAWC,GACvC,OAAiC,IAA7BA,EAAUpC,QAAQkC,OACX,CACHlC,QAASmC,EAAUnC,SAIpB,S,GAvBOqC,IAAMC,WCsBbC,E,4MAlBX1C,MAAQ,CAAEG,QAAS,I,kEACE,IAAD,OACZE,KAAKL,MAAMG,SACXwC,MAAM,sDACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAI,EAAK7C,SAAS,CAAEC,QAAS4C,OACtCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,+BAKlC,OAAQ,6BACJ,kBAAC,EAAD,CAAS9C,QAASE,KAAKL,MAAMG,e,GAdvBqC,IAAMC,W,MCAxBW,IAASC,OAAO,kBAAC,EAAD,MAAOC,SAASC,cAAc,Y","file":"static/js/main.35c078c1.chunk.js","sourcesContent":["import React from 'react';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col, Button, ListGroup, ListGroupItem } from 'reactstrap';\nimport classnames from 'classnames';\n\nclass Planets extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            planets: [],\n            activeTab: '1',\n        };\n\n\n    }\n\n    toggle = tab => {\n        if (this.state.activeTab !== tab) this.setState({ activeTab: tab });\n    }\n\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (prevState.planets.length === 0) {\n            return {\n                planets: nextProps.planets,\n\n            };\n        }\n        return null;\n    }\n\n    toggleFav(planetId) {\n        this.setState({\n            planets: this.state.planets.map(planet => {\n                if (planet.id === planetId) {\n                    return {\n                        id: planet.id,\n                        isFavourite: !planet.isFavourite,\n                        name: planet.name\n                    };\n                }\n                else\n                    return planet;\n            })\n        });\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\" style={{ padding: '20px 15px' }}>\n                <Nav tabs>\n                    <NavItem>\n                        <NavLink\n                            className={classnames({ active: this.state.activeTab === '1' })}\n                            onClick={() => { this.toggle('1'); }}\n                            style={{ cursor: 'pointer' }}\n                        >\n                            Planets\n                        </NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink\n                            className={classnames({ active: this.state.activeTab === '2' })}\n                            onClick={() => { this.toggle('2'); }}\n                            style={{ cursor: 'pointer' }}\n                        >\n                            Favourites\n                        </NavLink>\n                    </NavItem>\n                </Nav>\n                <TabContent activeTab={this.state.activeTab}>\n                    <TabPane tabId=\"1\">\n                        <Row>\n                            <Col sm=\"12\">\n\n                                <ListGroup>\n                                    {\n                                        this.state.planets.map((planet) => {\n                                            let listItem = planet.name;\n                                            let buttonNode = 'Mark as favourite';\n                                            if (planet.isFavourite)\n                                                buttonNode = 'Remove from favourites';\n                                            return (<ListGroupItem className=\"justify-content-between\" key={planet.id}>\n                                                {listItem} {planet.isFavourite}\n                                                <Button size=\"sm\" onClick={() => this.toggleFav(planet.id)}>{buttonNode}</Button>\n                                            </ListGroupItem>);\n                                        })\n                                    }\n                                </ListGroup>\n                            </Col>\n                        </Row>\n                    </TabPane>\n                    <TabPane tabId=\"2\">\n                        <Row>\n                            <Col sm=\"12\">\n                                {this.state.planets.filter(planet => planet.isFavourite).length > 0 &&\n                                    <ListGroup>\n                                        {this.state.planets.map((planet) => {\n                                            if (planet.isFavourite)\n                                                return <ListGroupItem key={planet.id}>{planet.name}</ListGroupItem>\n                                            return null;\n                                        })\n                                        }\n                                    </ListGroup>\n                                }\n                                {this.state.planets.filter(planet => planet.isFavourite).length < 1 &&\n                                <div>No favourites added</div>\n                                }   \n                            </Col>\n                        </Row>\n                    </TabPane>\n                </TabContent>\n\n\n\n            </div>\n        );\n    }\n\n}\n\nexport default Planets;","import React from 'react';\nimport Planets from './Planets';\n\n\n\n\nclass App extends React.Component {\n\n    state = { planets: [] }\n    componentDidMount() {\n        if (this.state.planets)\n            fetch(\" https://assignment-machstatz.herokuapp.com/planet\")\n                .then(res => res.json())\n                .then(data => this.setState({ planets: data }))\n                .catch(err => console.log(err));\n    }\n\n\n    render() {\n        return (<div>\n            <Planets planets={this.state.planets} />\n\n        </div>);\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App/>,document.querySelector('#root'));\n\n\n\n"],"sourceRoot":""}